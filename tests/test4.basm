//; fibonacci(n) function, bengi-asm
.fib:
    mov bx [-1]   	//; copy func. argument to BX
			        //; as loop stop variable

    push 2        	//; loop var
    mov ax 1
    push 1
                  	//; loop start
    push ax
    add
    push [sp]
    push ax
    sub 
    mov ax [sp]
    pop
                  	//; loop var += 1
    push [1]
    push 1
    add
                	//; copy loop var
    mov [1] [sp]
                	//; check if loop var == loop stop var
    push bx      
    eq
    jz 1012     	//; jump to loop start instruction (push ax)
                	//; and pop stack
                	//; loop end

    mov ax [sp]		//; write return value to AX
    pop			    //; remove function locals
    pop
    ret			    //; return 

.main:
    push 24		    //; push 20 as function argument
    call fib 	    //; call fibonacci function
    pop			    //; remove function argument
    push ax		    //; push function return value
    end			    //; end program

